@charset "utf-8";
/* CSS Document */

@font-face {
	font-family: Bebas Neue;
	src: url(BebasNeue-Bold.otf);
}
@font-face {
	font-family: Montserrat;
	src: url("Montserrat-Medium.ttf");
}
	  .body {
	background-image: url("websitebg.png");
	}
/*general styling*/
		body {
	background-image: url("websitebg.png");
 	background-color: #ffffff;
	background-size: cover;
	}

		text.nameheader {
	font-family: Bebas Neue;
	font-size: 40pt;
	color: #ffffff;
		}
		text.plainnameheader {
	font-family: Bebas Neue;
	font-size: 40pt;
	color: #133642;
		}
		text.header{
	font-family: Bebas Neue;
	font-size: 30pt;
	color: #ffffff;
		}

		text.face {
	font-family: Montserrat;
	color: #ffffff;
	font-size: 14pt;
}

		text.headface {
	font-family: Montserrat;
	color: #ffffff;
	font-size: 40pt;
}

		text.plainface {
	font-family: Montserrat;
	color: #133642;
	font-size: 14pt;
}
	b.color{
	color:#093640
}

.blueblock {
	background-color: #2d8c8d;
	align-self: center;  
	align-content: center;
	padding:10px;
	overflow: hidden;
	margin-left: 10%;
	margin-right: 10%;
	box-shadow: 0px 10px #206875;
}

.invisible {
	align-self: center;  
	padding:25px;
	margin-left: 10%;
	margin-right: 10%;
	overflow: hidden;
}


img.circle {
		border-radius: 50%;  
  height: auto;
}


.flex-container {
  /* We first create a flex layout context */
  display: flex;
  
  /* Then we define the flow direction 
     and if we allow the items to wrap 
   * Remember this is the same as:
   * flex-direction: row;
   * flex-wrap: wrap;
   */
  flex-flow: row wrap;
  
  /* Then we define how is distributed the remaining space */
  justify-content: space-around;
  
  padding: 0;
  margin: 0;
  list-style: none;
}

/* Make a one column-layout instead of three-column layout */
@media (max-width: 600px) {
  .flex-container {
    flex-direction: column;
  }
}

.flex-item {
	flex:1;
  padding: 5%;
  margin: 0%;
	  justify-content: center;
  align-items: center;
	  display: flex;
}


.button {
  display: inline-block;
  background-color: #2d8c8d;
  border: none;
  color: #FFFFFF;
  text-align: center;
  font-size: 28px;
  padding: 20px;
  width: 200px;
  transition: all 0.5s;
  cursor: pointer;
  margin: 5px;
}

.button span {
  cursor: pointer;
  display: inline-block;
  position: relative;
  transition: 0.5s;
}

.button span:after {
  content: '\00bb';
  position: relative;
  opacity: 0;
  top: 0;
  right: -20px;
  transition: 0.5s;
}

.button:hover span {
  padding-right: 25px;

}

.button:hover span:after {
  opacity: 1;
  right: 0;
}

/*.button:hover {
	transform: scale(1.05); /* (105% zoom - Note: if the zoom is too large, it will go outside of the viewport) }*/

.icon {
	  transition: transform .2s; /* Animation */
}

.icon:hover {
	transform: scale(1.50); /* (150% zoom - Note: if the zoom is too large, it will go outside of the viewport) */}

.button {
  display: inline-block;
  background-color: #2d8c8d;
  border: none;
  color: #FFFFFF;
  text-align: center;
  font-size: 28px;
  padding: 20px;
  width: 200px;
  transition: all 0.5s;
  cursor: pointer;
  margin: 5px;
}

.button span {
  cursor: pointer;
  display: inline-block;
  position: relative;
  transition: 0.5s;
}

.button span:after {
  content: '\00bb';
  position: relative;
  opacity: 0;
  top: 0;
  right: -20px;
  transition: 0.5s;
}

.button:hover span {
  padding-right: 25px;

}

.button:hover span:after {
  opacity: 1;
  right: 0;
}

/*.button:hover {
	transform: scale(1.05); /* (105% zoom - Note: if the zoom is too large, it will go outside of the viewport) }*/

.icon {
	  transition: transform .2s; /* Animation */
}

.icon:hover {
	transform: scale(1.50); /* (150% zoom - Note: if the zoom is too large, it will go outside of the viewport) */}
